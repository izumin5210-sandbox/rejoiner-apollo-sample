syntax = "proto3";

package qiita;

option go_package = "QiitaPb";
option java_multiple_files = true;
option java_outer_classname = "QiitaPb";
option java_package = "dev.izumin5210.sandbox.qiita";
option ruby_package = "QiitaPb";

service UserService {
  rpc GetUser(GetUserRequest) returns (User) {}
  rpc ListFollowers(ListFollowersRequest) returns (ListFollowersResponse) {}
  rpc ListFollowees(ListFolloweesRequest) returns (ListFolloweesResponse) {}
  rpc ListStockers(ListStockersRequest) returns (ListStockersResponse) {}
}

message GetUserRequest {
  // Required. User ID.
  string user_id = 1;
}

message User {
  // Optional. self-description.
  string description = 1;
  // Optional. Facebook ID.
  string facebook_id = 2;
  // Required. Followees count.
  uint32 followees_count = 3;
  // Required. Followers count.
  uint32 followers_count = 4;
  // Optional. GitHub ID.
  string github_login_name = 5;
  // Required. User ID.
  string id = 6;
  // Required. How many items a user posted on qiita.com (Items on Qiita Team are not included).
  uint32 items_count = 7;
  // Optional. LinkedIn ID.
  string linkedin_id = 8;
  // Optional. Location
  string location = 9;
  // Optional. Customized user name.
  string name = 10;
  // Optional. Organization which a user belongs to.
  string organization = 11;
  // Required. Unique integer ID.
  uint32 permanent_id = 12;
  // Required. Profile image URL.
  string profile_image_url = 13;
  // Required. A flag whether this user is configured as team-only.
  bool team_only = 14;
  // Optional. Twitter screen name.
  string twitter_screen_name = 15;
  // Optional.  Website URL.
  string website_url = 16;
}

message ListFollowersRequest {
  // Required. User ID.
  string user_id = 1;
}

message ListFollowersResponse {
  repeated User users = 1;
}

message ListFolloweesRequest {
  // Required. User ID.
  string user_id = 1;
}

message ListFolloweesResponse {
  repeated User users = 1;
}

message ListStockersRequest {
  // Required. Item ID.
  string item_id = 1;
}

message ListStockersResponse {
  repeated User users = 1;
}
